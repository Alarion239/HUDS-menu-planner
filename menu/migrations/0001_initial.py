# Generated by Django 4.2.7 on 2025-09-30 00:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
                ('portion_size', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('detail_url', models.URLField(blank=True, max_length=500)),
                ('calories', models.FloatField(default=0.0)),
                ('serving_size', models.CharField(blank=True, max_length=100)),
                ('total_fat', models.FloatField(default=0.0, help_text='Total fat in grams')),
                ('saturated_fat', models.FloatField(default=0.0, help_text='Saturated fat in grams')),
                ('trans_fat', models.FloatField(default=0.0, help_text='Trans fat in grams')),
                ('cholesterol', models.FloatField(default=0.0, help_text='Cholesterol in milligrams')),
                ('sodium', models.FloatField(default=0.0, help_text='Sodium in milligrams')),
                ('total_carbohydrate', models.FloatField(default=0.0, help_text='Total carbohydrate in grams')),
                ('dietary_fiber', models.FloatField(default=0.0, help_text='Dietary fiber in grams')),
                ('total_sugars', models.FloatField(default=0.0, help_text='Total sugars in grams')),
                ('added_sugars', models.FloatField(default=0.0, help_text='Added sugars in grams')),
                ('protein', models.FloatField(default=0.0, help_text='Protein in grams')),
                ('vitamin_d', models.FloatField(default=0.0, help_text='Vitamin D in micrograms')),
                ('calcium', models.FloatField(default=0.0, help_text='Calcium in milligrams')),
                ('iron', models.FloatField(default=0.0, help_text='Iron in milligrams')),
                ('potassium', models.FloatField(default=0.0, help_text='Potassium in milligrams')),
                ('ingredients', models.TextField(blank=True, help_text='Comma-separated ingredients')),
                ('first_seen', models.DateField(auto_now_add=True, help_text='When this dish was first added')),
                ('last_seen', models.DateField(auto_now=True, help_text='When this dish was last on a menu')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Dishes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DailyMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner')], db_index=True, max_length=20)),
                ('fetched_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dishes', models.ManyToManyField(blank=True, related_name='menus', to='menu.dish')),
            ],
            options={
                'verbose_name_plural': 'Daily Menus',
                'ordering': ['-date', 'meal_type'],
                'unique_together': {('date', 'meal_type')},
            },
        ),
    ]
