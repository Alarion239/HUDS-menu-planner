version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-huds_db}
      - POSTGRES_USER=${POSTGRES_USER:-huds_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-huds_password}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-huds_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 --workers 3 huds_project.wsgi:application"
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-huds_db}
      - POSTGRES_USER=${POSTGRES_USER:-huds_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-huds_password}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-temporary-secret-key-change-in-production}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-True}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/code/staticfiles:ro
    depends_on:
      - web
    restart: unless-stopped

  celery-worker:
    build: .
    command: celery -A huds_project worker --loglevel=info
    volumes:
      - .:/code
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-huds_db}
      - POSTGRES_USER=${POSTGRES_USER:-huds_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-huds_password}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-temporary-secret-key-change-in-production}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A huds_project beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-huds_db}
      - POSTGRES_USER=${POSTGRES_USER:-huds_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-huds_password}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-temporary-secret-key-change-in-production}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  telegram-bot:
    build: .
    command: python manage.py run_telegram_bot
    volumes:
      - .:/code
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-huds_db}
      - POSTGRES_USER=${POSTGRES_USER:-huds_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-huds_password}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-temporary-secret-key-change-in-production}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
